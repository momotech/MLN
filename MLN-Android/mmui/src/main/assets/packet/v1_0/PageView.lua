---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xu.jingyu
--- DateTime: 2020/8/27 16:01
--- 版本号 每次修改完内容后需要自动增加版本号/或者保证不会影响老版本
--- @version 1.0

local _class = {}
_class._type = 'ui'
_class._version = '1.0'
_class._classname = 'PageView'

--页面展示区域
function PageView(o)
    return _class:new(o)
end

function _class:new(o)
    o = o or {}
    setmetatable(o, _class)
    o.W = window:width()
    o.contentView = HStack(true)--关闭虚拟布局
    o.contentView:height(300)
     :positionType(PositionType.ABSOLUTE)
     :positionBottom(0)
    o.pageStack = {}--页面栈
    return o
end

--- 初始化第一页
function _class:init(page)
    if page then
        page:width(self.W)
        table.insert(self.pageStack, page)
        self.contentView:addView(page)
    end
end
--- 推出新页面
function _class:pushPage(page)
    local index = self:checkPageExist(page)
    print("pushpage--->", index, #self.pageStack)
    --栈里存在该page，直接动画切到该page
    if index > 0 then
        self:popToPageAtIndex(index)
        return
    end
    --栈不存在该page，添加
    if page then
        if page:width() ~= self.W then
            page:width(self.W)
        end
        table.insert(self.pageStack, page)
        self.contentView:addView(page)
        self:startAnim(#self.pageStack)
    end
end

--- 退出栈顶页面
function _class:popPage()
    local index = #self.pageStack
    if index > 1 then
        self:startAnim(index - 1, true)
    end
end

-- 检查页面是否在栈里
function _class:checkPageExist(page)
    for i, v in ipairs(self.pageStack) do
        if page == v then
            return i
        end
    end
    return 0
end

-- 跳转到指定页面
function _class:popToPageAtIndex(index)
    if index > #self.pageStack then
        return
    end
    self:startAnim(index)
end

-- 切换动画,传入当前page的index
function _class:startAnim(index, isPop)
    anim = ObjectAnimation(AnimProperty.PositionX, self.contentView)
    anim:to(-self.W * (index - 1)):duration(0.3)

    anim:finishBlock(function(anim, finish)
        --退出页面动画完成后
        if isPop and finish then
            local removeIndex = #self.pageStack
            local page = self.pageStack[removeIndex]
            page:removeFromSuper()
            table.remove(self.pageStack, removeIndex)
        end
    end)
    anim:start()

end

_class.__index = function(t, k)
    local method = _class[k]
    if method ~= nil then
        return method
    end
    local contentView = rawget(t, "contentView")
    if contentView and contentView[k] then
        t.__method = k
        return t
    end
    return method
end

_class.__call = function(t, k, ...)
    local ret = (k.contentView[t.__method])(k.contentView, ...)
    if ret == k.contentView then
        return t
    end
    return ret
end

return _class