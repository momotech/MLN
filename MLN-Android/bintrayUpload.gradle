apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
// This is the library version used when deploying the artifact

Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream() ;
properties.load( inputStream )
def JCENTER_USERNAME = properties.getProperty('JCENTER_USERNAME')
def JCENTER_APIKEY = properties.getProperty('JCENTER_APIKEY')
def JCENTER_USERORG = properties.getProperty('JCENTER_USERORG')
def DEV_ID = properties.getProperty('DEV_ID')
def DEV_NAME = properties.getProperty('DEV_NAME')
def REPO_NAME = properties.getProperty('REPO_NAME')


def siteUrl = PROJECT_URL  // 项目的主页
def gitUrl = PROJECT_GIT   // Git仓库的url
group = JCENTER_GROUP      // Maven Group ID for the artifact，一般填你唯一的包名
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging POM_PACKAGING
                // Add your description here
                name REPO_NAME
                url siteUrl
                //自定义artifactId
                artifactId PLAYERSDK_ARTIFACT_ID
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id DEV_ID     //填写的一些基本信息
                        name DEV_NAME
                    }
                }

                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }

        pom.withXml {
            def dependenciesNode = asNode().appendNode('dependencies')
            //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
            configurations.implementation.allDependencies.each {
                if (it.group != null) {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                    dependencyNode.appendNode('scope', "api")
                }
            }
        }
    }
}
//task sourcesJar(type: Jar) {
////    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//
//task javadoc(type: Javadoc) {
////    source = android.sourceSets.main.java.srcDirs
////    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

artifacts {
    //不想上传javaDoc和source就注释掉这两行代码
//    archives javadocJar
//    archives sourcesJar
}
bintray {
    user = JCENTER_USERNAME
    key = JCENTER_APIKEY
    configurations = ['archives']
    pkg {
        repo = REPO_NAME
        name = PLAYERSDK_ARTIFACT_ID   //发布到JCenter上的项目名字
        userOrg = JCENTER_USERORG
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}