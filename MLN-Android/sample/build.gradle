apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion
    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        release {
            storeFile file("key")
            storePassword "123456"
            keyAlias "key"
            keyPassword "123456"
            v2SigningEnabled true   // android 5.0-8.0，必须用V2，否则会有安全问题
        }
    }
    buildTypes {
        debug {
            buildConfigField("String", "BUILD_TIME", "\"hi2\"")
            minifyEnabled false
        }
        release {
            minifyEnabled false
            zipAlignEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation project(':scan')
    implementation 'com.alibaba:fastjson:1.1.46.android'
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.recyclerview:recyclerview:$androidXVersion"
    implementation "androidx.appcompat:appcompat:$androidXVersion"
    implementation "com.google.protobuf:protobuf-lite:$protobufVersion"
    testImplementation 'junit:junit:4.12'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    if (implementation_debug) {
        implementation project(':mlncore')
        implementation project(':mlnservics')
        implementation project(':HotReload')
//        implementation project(':mmui')
//        implementation project(':yoga')
        implementation project(':annotation')
        kapt project(':processor')
    } else {
        implementation "com.immomo.mlncore:core:$mlnCoreVersion"
        implementation "com.immomo.mls:mln:$mlnsVersion"
//        implementation "com.immomo.mmui:mmui:$mmuiVersion"
//        implementation "com.immomo.yoga:yoga:$yogaVersion"
        debugImplementation "com.immomo.luanative:hotreload:$hotreloadVersion"
        releaseImplementation "com.immomo.luanative:hotreload_empty:$hotreloadVersion"
        kapt "com.immomo.mls:processor:$processorVersion"
        implementation "com.immomo.mls:annotation:$annotationVersion"
    }
}